/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * HandsVeinRegistration.java
 *
 * Created on Oct 24, 2012, 9:58:05 AM
 */
package handsveindetection;
import handsveindetection.buisness.FileMonitor;
import handsveindetection.buisness.ImageProcessing;
import handsveindetection.buisness.VeinDetails;
import handsveindetection.db.HandsVeinDBInstantiate;
import handsveindetection.db.HandsVeinDao;
import handsveindetection.db.HandsVeinDetails;
import java.util.regex.Pattern;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.ByteArrayOutputStream;
import javax.swing.JTextArea;
import javax.swing.JTextField;
/**
 *
 * @author Amar
 */
public class HandsVeinRegistration extends javax.swing.JPanel{
//
  
    //"^[_A-Za-z0-9-\\+]+(\\.[_A-Za-z0-9-]+)*@"+ "[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$"
   private static final String EMAIL_PATTERN ="^([\\w]((\\.(?!\\.))|[-!#\\$%'\\*\\+/=\\?\\^`\\{\\}\\|~\\w])*)(?<=[\\w])@(([\\w][-\\w]*[\\w]\\.)+[a-zA-Z]{2,6})$"; ;

   private static final String NUMBER_PATTERN="\\d{10}";
    /** Creates new form HandsVeinRegistration */
    public HandsVeinRegistration() {
        initComponents();
    }

   private boolean valiDateInput(){
       
    if(regnameText.getText().trim().length()==0){
             JOptionPane.showMessageDialog(this, "Name can not be blank");
         return false;
     }
   
    else if(regcontactNumberText.getText().trim().length()!=10){
                JOptionPane.showMessageDialog(this, "Contact Must be of 10 digit numeric value");
                return false;
     }
         
    else if(!Pattern.matches(NUMBER_PATTERN, regcontactNumberText.getText())){
        JOptionPane.showMessageDialog(this, "Contact Must be of 10 digit numeric value");
                return false;
     }
    else if((regemaillText.getText().trim().length()==0)){
        JOptionPane.showMessageDialog(this, "Email can not be blank");
       return false;
    }
    else if(!Pattern.matches(EMAIL_PATTERN, regemaillText.getText())){
         JOptionPane.showMessageDialog(this, "Please Enter Valid Emial Id ");
       return false;
     }
   
         
   else if( regaddressText.getText().trim().length()==0){
        JOptionPane.showMessageDialog(this, "Address can not be blank");
       return false;
    }
    
    else if(regimageLabel.getIcon()==null){
           JOptionPane.showMessageDialog(this, "Password can not be blank");
         return false;
     }
     return true;
   } 
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        regimageLabel2 = new javax.swing.JLabel();
        reglogo = new javax.swing.JLabel();
        regNameLabel = new javax.swing.JLabel();
        regnameText = new javax.swing.JTextField();
        regContactNumberLabel = new javax.swing.JLabel();
        regcontactNumberText = new javax.swing.JTextField();
        regEmailIdLabel = new javax.swing.JLabel();
        regemaillText = new javax.swing.JTextField();
        regaddresslabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        regaddressText = new javax.swing.JTextArea();
        regPaswordLabel = new javax.swing.JLabel();
        regSubmitButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        regimageLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        grayscaleImagelabel = new javax.swing.JLabel();
        segementedImageLabel = new javax.swing.JLabel();
        iRImageLabel = new javax.swing.JLabel();
        histogramImagelabel = new javax.swing.JLabel();

        regimageLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        setAlignmentX(0.0F);
        setAlignmentY(0.0F);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setMaximumSize(new java.awt.Dimension(600, 480));

        reglogo.setFont(new java.awt.Font("Tahoma", 1, 12));
        reglogo.setText("              New User Registration Form");

        regNameLabel.setText("Name");

        regnameText.setText("jTextField1");

        regContactNumberLabel.setText("Contact Number");

        regcontactNumberText.setText("jTextField2");

        regEmailIdLabel.setText("Email Id");

        regemaillText.setText("jTextField3");

        regaddresslabel.setText("Addresss");

        regaddressText.setColumns(20);
        regaddressText.setRows(5);
        jScrollPane1.setViewportView(regaddressText);

        regPaswordLabel.setText("Password");

        regSubmitButton.setText("Submit");
        regSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regSubmitButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("GrayScale");

        jLabel4.setText("CanyEdgeDetection");

        regimageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        jLabel1.setText("IR Image");

        jLabel2.setText("HistoGram");

        grayscaleImagelabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        segementedImageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        iRImageLabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        histogramImagelabel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(reglogo, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(regContactNumberLabel)
                            .addComponent(regEmailIdLabel)
                            .addComponent(regaddresslabel)
                            .addComponent(regNameLabel)
                            .addComponent(regPaswordLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(regemaillText, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                            .addComponent(regnameText)
                            .addComponent(regcontactNumberText, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(regSubmitButton)
                            .addComponent(regimageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel1)))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(iRImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(grayscaleImagelabel, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE))))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(81, 81, 81)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(jLabel2))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(histogramImagelabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(segementedImageLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)))
                .addContainerGap(20, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(reglogo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(regnameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(regNameLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(regContactNumberLabel)
                                    .addComponent(regcontactNumberText, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(regemaillText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(regEmailIdLabel))))
                        .addGap(18, 36, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(regaddresslabel)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(histogramImagelabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iRImageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(4, 4, 4)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(regimageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(regPaswordLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(regSubmitButton))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(grayscaleImagelabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(segementedImageLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 140, Short.MAX_VALUE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

private void regSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regSubmitButtonActionPerformed
// TODO add your handling code here:
    if(valiDateInput()){
        try{
            FileMonitor fileMonitor= new FileMonitor();
    	  java .util.Properties properties = fileMonitor.getResourceLocation();
          HandsVeinDao handsVeinDao = HandsVeinDBInstantiate.getHandsVeinDao();
          HandsVeinDetails handsVeinDetails= new HandsVeinDetails();
          handsVeinDetails.setUserName(regnameText.getText().trim());
          handsVeinDetails.setContactNumber(regcontactNumberText.getText().trim());
          handsVeinDetails.setEmail(regemaillText.getText().trim());
          handsVeinDetails.setAddress(regaddressText.getText().trim());
          ImageProcessing imageProcessing= new ImageProcessing();
          VeinDetails veinDetails =imageProcessing.getVeinDetails();
          handsVeinDetails.setNoofvein(veinDetails.getNoOfVein());
          handsVeinDetails.setNoofcrosspoint(veinDetails.getNoOfIntersectionPointInVein());
          handsVeinDetails = imageProcessing.processImageForBifurcationEndPointetc(properties.getProperty("directory")+properties.getProperty("canyedgeimage"),handsVeinDetails);
          System.out.println("No of Vein"+veinDetails.getNoOfVein());
          System.out.println("No of cross point"+veinDetails.getNoOfIntersectionPointInVein());
//          FileMonitor fileMonitor= new FileMonitor();
//          Properties properties  = fileMonitor.getResourceLocation();
//          ConvertJPGToBMP cjpgtbmp= new ConvertJPGToBMP();
//          cjpgtbmp.convertJpegToBMP(properties.getProperty("filename"),properties.getProperty("directory"));        
//          HistogramEQ histogramEQ = new HistogramEQ();
//          histogramEQ.grayscaleHistogramm(properties.getProperty("bmpfilename"),properties.getProperty("directory"));
//          CannyEdgeDetector cannyEdgeDetector = new CannyEdgeDetector();
//          cannyEdgeDetector.convertToCannyEdgeDetector(properties.getProperty("histogramimage"),properties.getProperty("directory"));
//          HoughTransform houghTransform = new HoughTransform();
//          VeinDetails veinDetails = houghTransform.getVeinDetails(properties.getProperty("canyedgeimage"),properties.getProperty("directory"));
//          System.out.println("No of Vein"+veinDetails.getNoOfVein());
//          System.out.println("No of cross point"+veinDetails.getNoOfIntersectionPointInVein());
//          
          
                    
          ImageIcon icon=(ImageIcon) regimageLabel.getIcon();
          Image image= icon.getImage();
          ByteArrayOutputStream byteArrayOutputStream=null;
          try{
                byteArrayOutputStream= new ByteArrayOutputStream();
                ImageIO.write(new BufferedImage(image.getWidth(null), image.getHeight(null), BufferedImage.TYPE_BYTE_GRAY), "bmp", byteArrayOutputStream);
                byte imagebyte[] = byteArrayOutputStream.toByteArray();
                handsVeinDetails.setPassword(imagebyte);
              

          }catch(Throwable t){
              t.printStackTrace();
          }finally{
              try{
                   byteArrayOutputStream.close();
              }catch(Throwable e){
                  e.printStackTrace();;
              }

          }
          String dbGeneratedUserId = handsVeinDao.generateId(handsVeinDetails);
          JOptionPane.showMessageDialog(this, "your user Id "+dbGeneratedUserId);
         fileMonitor.fileDelete();
         HandsVeinWindow.handsVeinRegistration.getiRImageLabel().setIcon(null);
         HandsVeinWindow.handsVeinRegistration.getHistogramImagelabel().setIcon(null);
         HandsVeinWindow.handsVeinRegistration.getGrayscaleImagelabel().setIcon(null);
         HandsVeinWindow.handsVeinRegistration.getSegementedImageLabel().setIcon(null);
         HandsVeinWindow.handsVeinRegistration.getRegimageLabel().setIcon(null);
         HandsVeinWindow.handsVeinRegistration.getRegnameText().setText("");
         HandsVeinWindow.handsVeinRegistration.getRegaddressText().setText("");
         HandsVeinWindow.handsVeinRegistration.getRegcontactNumberText().setText("");
         HandsVeinWindow.handsVeinRegistration. getRegemaillText().setText("");
        }catch(Exception t){
            t.printStackTrace();
        }
         
    }
}//GEN-LAST:event_regSubmitButtonActionPerformed
  public JLabel getpasswordLabel(){
       return regimageLabel;
   }
  public JLabel getGrayscaleImagelabel() {
        return grayscaleImagelabel;
    }

  public JLabel getHistogramImagelabel() {
        return histogramImagelabel;
    }

  public JLabel getiRImageLabel() {
        return iRImageLabel;
    }

    public JLabel getSegementedImageLabel() {
        return segementedImageLabel;
    }
    public JTextArea getRegaddressText() {
        return regaddressText;
    }

    public JTextField getRegcontactNumberText() {
        return regcontactNumberText;
    }

    public JTextField getRegemaillText() {
        return regemaillText;
    }

    public JLabel getRegimageLabel() {
        return regimageLabel;
    }

    public JTextField getRegnameText() {
        return regnameText;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel grayscaleImagelabel;
    private javax.swing.JLabel histogramImagelabel;
    private javax.swing.JLabel iRImageLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel regContactNumberLabel;
    private javax.swing.JLabel regEmailIdLabel;
    private javax.swing.JLabel regNameLabel;
    private javax.swing.JLabel regPaswordLabel;
    private javax.swing.JButton regSubmitButton;
    private javax.swing.JTextArea regaddressText;
    private javax.swing.JLabel regaddresslabel;
    private javax.swing.JTextField regcontactNumberText;
    private javax.swing.JTextField regemaillText;
    private javax.swing.JLabel regimageLabel;
    private javax.swing.JLabel regimageLabel2;
    private javax.swing.JLabel reglogo;
    private javax.swing.JTextField regnameText;
    private javax.swing.JLabel segementedImageLabel;
    // End of variables declaration//GEN-END:variables

    

   
}
